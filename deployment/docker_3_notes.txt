

ls ~/.aws


create ECR on AWS

cd /cygdrive/c/users/lars_/Documents/my_corporate/AddScape/infrastructure/samples/docker_3/deployment

export ACCOUNT_ID=$(aws sts get-caller-identity --profile terraform_deployment | jq -r ".Account")

echo $ACCOUNT_ID


export REGION=us-east-1

terraform plan
terraform apply


export DOCKER_INTERNAL_PORT=6000
export DOCKER_EXTERNAL_PORT=3002


## create docker image

# in main directory (conatining the app.js and package.json files)
#create Dockerfile and .dockerignore

cat <<EOF > Dockerfile
# Use Node.js image
FROM node:16

# Create and set a working directory
WORKDIR /usr/src/app

# Copy package.json and package-lock.json files
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the app source code
COPY . .

# Expose the port the app will run on
EXPOSE $DOCKER_INTERNAL_PORT

# Command to run the application
CMD ["node", "app.js"]

EOF




# set name of the image

export IMAGE=cybotix/demo-web-app

docker build . -t $IMAGE

docker images

# run the docker image
export TAG=latest

docker run -p $DOCKER_EXTERNAL_PORT:$DOCKER_INTERNAL_PORT -d  $IMAGE

docker ps
curl -i http://localhost:$DOCKER_EXTERNAL_PORT/

docker ps | grep $IMAGE

docker exec -it bd358d818675 bash

apt-get update
apt-get install vim
apt-get install net-tools

exit

docker kill bd358d818675 

## push docker image to ECR


cd deployment


export ACCOUNT_ID=$(aws sts get-caller-identity --profile terraform_deployment | jq -r ".Account")

echo $ACCOUNT_ID
export REGION=eu-west-1
echo $REGION

export REP_URI=cybotix-demo-app-repo

export REPO_URL=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REP_URI
echo $REPO_URL



echo $REPO_URL:latest

# tag the docker image with "latest" and the AWS repository 
echo docker tag $IMAGE:latest $REPO_URL:latest
echo docker tag $IMAGE:latest $REPO_URL:latest | bash

docker images | grep latest


echo "aws ecr get-login-password --region $REGION --profile terraform_deployment | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com"
 
aws ecr get-login-password --region $REGION --profile terraform_deployment  | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com 


echo "docker push $REPO_URL:latest"
docker push $REPO_URL:latest



# check docker image running status

aws ecs list-task-definitions --profile terraform_deployment --region $REGION

aws ecs describe-tasks --tasks "arn:aws:ecs:eu-west-1:125282513367:task-definition/my-task:1" --profile terraform_deployment --region $REGION

curl -kv http://load-balancer-dev-1048692707.us-east-1.elb.amazonaws.com




